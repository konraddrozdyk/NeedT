/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TransporterDashboardImport } from './routes/transporter-dashboard'
import { Route as RegisterImport } from './routes/register'
import { Route as OrdererDashboardImport } from './routes/orderer-dashboard'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TransporterDashboardRoute = TransporterDashboardImport.update({
  id: '/transporter-dashboard',
  path: '/transporter-dashboard',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const OrdererDashboardRoute = OrdererDashboardImport.update({
  id: '/orderer-dashboard',
  path: '/orderer-dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/orderer-dashboard': {
      id: '/orderer-dashboard'
      path: '/orderer-dashboard'
      fullPath: '/orderer-dashboard'
      preLoaderRoute: typeof OrdererDashboardImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/transporter-dashboard': {
      id: '/transporter-dashboard'
      path: '/transporter-dashboard'
      fullPath: '/transporter-dashboard'
      preLoaderRoute: typeof TransporterDashboardImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/orderer-dashboard': typeof OrdererDashboardRoute
  '/register': typeof RegisterRoute
  '/transporter-dashboard': typeof TransporterDashboardRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/orderer-dashboard': typeof OrdererDashboardRoute
  '/register': typeof RegisterRoute
  '/transporter-dashboard': typeof TransporterDashboardRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/orderer-dashboard': typeof OrdererDashboardRoute
  '/register': typeof RegisterRoute
  '/transporter-dashboard': typeof TransporterDashboardRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/orderer-dashboard' | '/register' | '/transporter-dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/orderer-dashboard' | '/register' | '/transporter-dashboard'
  id:
    | '__root__'
    | '/'
    | '/orderer-dashboard'
    | '/register'
    | '/transporter-dashboard'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrdererDashboardRoute: typeof OrdererDashboardRoute
  RegisterRoute: typeof RegisterRoute
  TransporterDashboardRoute: typeof TransporterDashboardRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrdererDashboardRoute: OrdererDashboardRoute,
  RegisterRoute: RegisterRoute,
  TransporterDashboardRoute: TransporterDashboardRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/orderer-dashboard",
        "/register",
        "/transporter-dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/orderer-dashboard": {
      "filePath": "orderer-dashboard.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/transporter-dashboard": {
      "filePath": "transporter-dashboard.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
